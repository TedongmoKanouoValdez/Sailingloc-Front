'use client';
import React, { useRef, useState } from 'react';
import { Button } from '@heroui/button';
import { RiEdit2Fill } from 'react-icons/ri';
import { IoTicket, IoCloudDownload } from 'react-icons/io5';
import { toPng } from 'html-to-image';
import { jsPDF } from 'jspdf';
import { QRCode } from 'antd';
import { Logo } from '@/components/icons';
import { Alert } from '@heroui/alert';

export default function ContratLocation() {
  const contratRef = useRef<HTMLDivElement>(null);
  const receiptRef = useRef<HTMLDivElement>(null);
  const [isSigned, setIsSigned] = useState(false);
  const [message, setMessage] = useState('');
  const [isDownloading, setIsDownloading] = useState(false);
  const title = 'T√©l√©chargez votre contrat et vos re√ßus';
  const description =
    'Pour votre s√©curit√© et afin de faciliter votre r√©servation sur place, nous vous recommandons de t√©l√©charger votre contrat de location et vos re√ßus. Ces documents sont essentiels pour confirmer votre r√©servation et √©viter tout malentendu. Enfin n oubliez pas √©galement de cliquer sur le bouton ¬´ Termin√© ¬ª pour finaliser votre r√©servation.';

  const payloadStr =
    typeof window !== 'undefined' ? localStorage.getItem('reservationPayload') : null;
  const payload = payloadStr ? JSON.parse(payloadStr) : null;

  const reservationId =
    typeof window !== 'undefined' ? localStorage.getItem('reservationId') : null;
  const reservation = reservationId ? JSON.parse(reservationId) : 0;

  // Nouvelle g√©n√©ration PDF avec html-to-image + jsPDF
  const handleDownload = async () => {
    if (!isSigned) {
      setMessage('‚ö†Ô∏è Vous devez signer le contrat avant de t√©l√©charger.');
      return;
    }

    setIsDownloading(true);
    setMessage('üì• T√©l√©chargement en cours...');

    if (contratRef.current) {
      setMessage('');
      try {
        // Convertit ton contrat en image PNG
        const dataUrl = await toPng(contratRef.current, {
          cacheBust: true,
          // useCors: true,
        });

        // Cr√©ation du PDF
        const pdf = new jsPDF('p', 'mm', 'a4');
        const imgProps = pdf.getImageProperties(dataUrl);
        const pdfWidth = pdf.internal.pageSize.getWidth();
        const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;

        pdf.addImage(dataUrl, 'PNG', 0, 0, pdfWidth, pdfHeight);

        const pdfBlob = pdf.output('blob');

        const formData = new FormData();
        formData.append('file', pdfBlob, 'contrat-location.pdf');
        formData.append('reservationId', reservation.toString());

        const res = await fetch('https://sailingloc-back.vercel.app/api/upload-contrat', {
          method: 'POST',
          body: formData,
        });

        const data = await res.json();

        if (data.success) {
          pdf.save('contrat-location.pdf');
          setMessage('PDF t√©l√©charg√© avec succ√®s !');
        } else {
          setMessage('√âchec du t√©l√©chargement');
        }
        setIsDownloading(false);

        console.log('PDF g√©n√©r√© !');
      } catch (err) {
        console.error('Erreur PDF:', err);
      }
    }
  };

  // ---- T√©l√©chargement re√ßu ----
  const handleDownloadReceipt = async () => {
    if (!isSigned) {
      setMessage('‚ö†Ô∏è Vous devez signer avant de t√©l√©charger le re√ßu.');
      return;
    }

    setIsDownloading(true);
    setMessage('üì• T√©l√©chargement du re√ßu...');

    try {
      // Convertit le re√ßu invisible en PNG
      const dataUrl = await toPng(receiptRef.current!, {
        cacheBust: true,
        // useCors: true,
        backgroundColor: '#ffffff',
      });

      // G√©n√©ration PDF
      const pdf = new jsPDF('p', 'mm', 'a6');
      const imgProps = pdf.getImageProperties(dataUrl);
      const pdfWidth = pdf.internal.pageSize.getWidth();
      const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;
      pdf.addImage(dataUrl, 'PNG', 0, 0, pdfWidth, pdfHeight);

      const pdfBlob = pdf.output('blob');

      // Envoi du PDF au backend
      const formData = new FormData();
      formData.append('file', pdfBlob, 'recu-location.pdf');
      formData.append('reservationId', reservation.toString());

      const res = await fetch('https://sailingloc-back.vercel.app/api/upload-recu', {
        method: 'POST',
        body: formData,
      });

      const data = await res.json();

      if (data.success) {
        pdf.save('recu-location.pdf'); // T√©l√©chargement c√¥t√© client
        setMessage('Re√ßu t√©l√©charg√© et envoy√© au serveur avec succ√®s !');
      } else {
        setMessage('√âchec du t√©l√©chargement du re√ßu');
      }
    } catch (err) {
      console.error(err);
      setMessage('Erreur lors de la g√©n√©ration du re√ßu');
    } finally {
      setIsDownloading(false);
    }
  };

  const handleSign = () => {
    setIsSigned(true);
    setMessage('Contrat sign√© avec succ√®s !');
  };

  const terminerlecontrat = () => {
    localStorage.removeItem('nomdupropri√©taire'); // supprime la cl√©
    localStorage.removeItem('reservationId'); // supprime la cl√©
    localStorage.removeItem('reservationPayload'); // supprime la cl√©
    // Rediriger vers la page d'accueil ou une autre page
    window.location.href = '/';
  };

  return (
    <div className="p-6 flex flex-col items-center my-16">
      <div className="mx-auto max-w-7xl mb-4 flex items-center justify-center w-full">
        <Alert description={description} title={title} />
      </div>

      {/* Contrat */}
      <div ref={contratRef} className="w-full max-w-3xl bg-white shadow-xl text-gray-800">
        {/* Banner */}
        <div className="relative">
          <div className="z-10 absolute">
            <Logo className="w-24 h-24" />
          </div>
          <img
            src="https://res.cloudinary.com/dv19l9qkz/image/upload/v1757710604/yacht-reflet-coucher-de-soleil-port_1_blreki.jpg"
            alt="Banni√®re"
            crossOrigin="anonymous"
            className="w-full h-48 object-cover"
          />
          <div className="absolute inset-0 bg-black bg-opacity-50"></div>
          <h1 className="absolute bottom-4 left-6 text-3xl font-bold text-white drop-shadow-md">
            Contrat de Location de Bateau
          </h1>
        </div>

        {/* Infos contrat */}
        <div className="space-y-4 p-8 relative">
          <h2 className="text-xl font-semibold text-blue-600 z-10 relative">
            Informations g√©n√©rales
          </h2>
          <p className="z-10 relative">
            Ce contrat est conclu entre{' '}
            <span className="font-semibold">{payload?.bateau?.proprietairename}</span> et{' '}
            <span className="font-semibold">
              {payload?.client?.titre} {payload?.client?.nom} {payload?.client?.prenom}
            </span>
            , contact :{' '}
            <span className="font-semibold">
              +{payload?.client?.codePays} {payload?.client?.telephone}
            </span>
            , pour la location du bateau{' '}
            <span className="font-semibold">{payload?.bateau?.nom}</span>.
          </p>

          <h2 className="text-xl font-semibold text-blue-600 z-10 relative">
            Dur√©e de la location
          </h2>
          <p className="z-10 relative">
            La p√©riode de location commence le{' '}
            <strong>
              {payload?.reservation?.dateDebut &&
                new Date(`${payload?.reservation.dateDebut}T00:00:00`).toLocaleDateString('fr-FR', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                })}
            </strong>{' '}
            et se termine le{' '}
            <strong>
              {payload?.reservation?.dateFin &&
                new Date(`${payload?.reservation.dateFin}T00:00:00`).toLocaleDateString('fr-FR', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                })}
            </strong>
            .
          </p>

          <h2 className="text-xl font-semibold text-blue-600 z-10 relative">Conditions</h2>
          <ul className="list-disc list-inside space-y-1 z-10 relative">
            <li>Le locataire s engage √† respecter les r√®gles de navigation.</li>
            <li>Le bateau doit √™tre rendu dans le m√™me √©tat qu √† la remise.</li>
            <li>Toute d√©gradation sera √† la charge du locataire.</li>
          </ul>

          <h2 className="text-xl font-semibold text-blue-600 z-10 relative">Signature</h2>
          <div className="flex justify-between mt-6">
            {/* Signature propri√©taire */}
            <div className="flex flex-col z-10">
              <img
                src="https://res.cloudinary.com/dv19l9qkz/image/upload/v1757710447/signature_az3cjb.png"
                alt="Signature Propri√©taire"
                crossOrigin="anonymous"
                className="h-16 object-contain"
              />
              <div className="border-t border-gray-400 mt-6 w-48"></div>
            </div>

            {/* Signature locataire */}
            <div className="flex flex-col z-10">
              {isSigned ? (
                <img
                  src="https://res.cloudinary.com/dv19l9qkz/image/upload/v1757710447/signature_3_m4pxoq.png"
                  alt="Signature Locataire"
                  crossOrigin="anonymous"
                  className="h-12 object-contain"
                />
              ) : (
                <div className="h-12 w-48 border border-dashed border-gray-400 flex items-center justify-center text-gray-500">
                  Signature requise
                </div>
              )}
              <div className="border-t border-gray-400 mt-6 w-48"></div>
            </div>
          </div>
        </div>
      </div>

      {/* Re√ßu (invisible mais t√©l√©chargeable) */}
      <div ref={receiptRef}>
        <section className="w-full flex-grow bg-white flex items-center justify-center p-4 mt-4">
          <div
            className="flex w-full max-w-3xl text-zinc-900 h-64"
            style={{ border: '1px solid #000', borderRadius: '10px' }}
          >
            <div className="h-full bg-white flex items-center justify-center px-8 rounded-l-3xl">
              <QRCode
                errorLevel="H"
                value={`identifiant de la r√©servation : ${reservationId}`}
                icon="/favicon.png"
              />
            </div>
            <div className="relative h-full flex flex-col items-center border-dashed justify-between border-2 bg-white border-zinc-900">
              <div
                className="absolute rounded-full w-8 h-8 bg-white -top-5"
                style={{ borderBottom: '1px solid #000' }}
              ></div>
              <div
                className="absolute rounded-full w-8 h-8 bg-white -bottom-5"
                style={{ borderTop: '1px solid #000' }}
              ></div>
            </div>
            <div className="h-full py-8 px-10 bg-white flex-grow rounded-r-3xl flex flex-col">
              <div className="flex flex-col w-full justify-between items-start">
                <h2 className="text-2xl font-bold mb-2">Re√ßu de Paiement</h2>
                <p className="text-sm text-zinc-500">
                  Merci pour votre confiance ! Voici le re√ßu de votre r√©servation.
                </p>

                <div className="mt-4 space-y-1 text-sm">
                  <p>
                    <strong>Nom :</strong> {payload?.client?.nom} {payload?.client?.prenom}
                  </p>
                  <p>
                    <strong>Bateau :</strong> {payload?.bateau?.nom}
                  </p>
                  <p className={`${payload?.reservation?.heure ? '' : 'hidden'}`}>
                    <strong>heure :</strong> {payload?.reservation?.heure}
                  </p>
                </div>
              </div>
              <div className="flex w-full mt-auto justify-between">
                <div className="flex flex-col">
                  <span className="text-xs text-zinc-400">Date</span>
                  <span className="font-mono">
                    {new Date().toLocaleDateString('fr-FR', {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric',
                    })}
                  </span>
                </div>
                <div className="flex flex-col">
                  <span className="text-xs text-zinc-400">Montant</span>
                  <span className="font-mono">{payload?.reservation?.total} ‚Ç¨</span>
                </div>
                <div className="flex flex-col">
                  <span className="text-xs text-zinc-400">Passenger</span>
                  <span className="font-mono">{payload?.reservation?.nbPassagers}</span>
                </div>
                <div className="flex flex-col">
                  <span className="text-xs text-zinc-400">port</span>
                  <span className="font-mono">{payload?.bateau?.port}</span>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>

      {/* Boutons */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mt-6">
        <Button
          onClick={handleSign}
          disabled={isDownloading}
          startContent={<RiEdit2Fill />}
          className={`px-6 py-3 font-semibold rounded-lg shadow-lg text-white ${
            isDownloading ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700'
          }`}
        >
          {isDownloading ? '‚è≥ T√©l√©chargement...' : 'Signer le contrat'}
        </Button>

        <Button
          onClick={handleDownload}
          disabled={isDownloading || !isSigned}
          startContent={<IoCloudDownload />}
          className={`px-6 py-3 font-semibold rounded-lg shadow-lg text-white ${
            isDownloading || !isSigned
              ? 'bg-gray-400 cursor-not-allowed'
              : 'bg-blue-600 hover:bg-blue-700'
          }`}
        >
          {isDownloading ? '‚è≥ T√©l√©chargement...' : 'T√©l√©charger en PDF'}
        </Button>

        <Button
          onClick={() =>
            isSigned && !isDownloading
              ? handleDownloadReceipt()
              : setMessage(
                  !isSigned
                    ? '‚ö†Ô∏è Vous devez signer avant de t√©l√©charger le re√ßu.'
                    : '‚è≥ T√©l√©chargement en cours...'
                )
          }
          disabled={isDownloading || !isSigned}
          startContent={<IoTicket />}
          className={`px-6 py-3 font-semibold rounded-lg shadow-lg text-white ${
            isDownloading || !isSigned
              ? 'bg-gray-400 cursor-not-allowed'
              : 'bg-blue-600 hover:bg-blue-700'
          }`}
        >
          {isDownloading ? '‚è≥ T√©l√©chargement...' : 'T√©l√©charger votre re√ßu'}
        </Button>
        <Button
          onClick={terminerlecontrat}
          disabled={isDownloading || !isSigned}
          // startContent={<IoCloudDownload />}
          className={`px-6 py-3 font-semibold rounded-lg shadow-lg text-white ${
            isDownloading || !isSigned
              ? 'bg-gray-400 cursor-not-allowed'
              : 'bg-blue-600 hover:bg-blue-700'
          }`}
        >
          Terminer
        </Button>
      </div>

      {/* Message utilisateur */}
      {message && <p className="mt-4 text-red-600 font-semibold animate-pulse">{message}</p>}
    </div>
  );
}
